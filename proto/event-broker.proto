syntax = "proto3";

package event_broker;

service EventBrokerService {
    rpc AddProducer(AddProducerRequest) returns (AddProducerResponse);
    rpc AddConsumer(AddConsumerRequest) returns (AddConsumerResponse);
    rpc RemoveProducer(RemoveProducerRequest) returns (RemoveProducerResponse);
    rpc RemoveConsumer(RemoveConsumerRequest) returns (RemoveConsumerResponse);
    rpc GetAllProducers(EmptyMessage) returns (GetAllProducersResponse);
    rpc GetAllConsumers(EmptyMessage) returns (GetAllConsumersResponse);
    rpc ProduceEvent(ProduceEventRequest) returns (ProduceEventResponse);
    rpc ConsumeEvent(stream ConsumeEventRequest) returns (stream ConsumerEventResponse);
}

message EmptyMessage {}

message AddProducerRequest {
    string name = 1;
    repeated string events = 2;
}

message AddProducerResponse {
    string producerId = 1;
    int32 status = 2;
    string error = 3;
}

message AddConsumerRequest {
    reserved 1;
    // string producerName = 1;
    string name = 2;
    repeated string events = 3;
}

message AddConsumerResponse {
    string consumerId = 1;
    int32 status = 2;
    string error = 3;
}

message RemoveProducerRequest {
    string producerId = 1;
}

message RemoveProducerResponse {
    int32 status = 1;
    string error = 2;
}

message RemoveConsumerRequest {
    string consumerId = 1;
}

message RemoveConsumerResponse {
    int32 status = 1;
    string error = 2;
}

message GetAllProducersResponse {
    int32 status = 1;
    string error = 2;

    message Producer {
        string id = 1;
        string name = 2;
        repeated string events = 3;
    }

    repeated Producer producers = 3;
}

message GetAllConsumersResponse {
    int32 status = 1;
    string error = 2;

    message Consumer {
        string id = 1;
        string name = 2;
        repeated string events = 3;
    }

    repeated Consumer consumers = 3;
}

message ProduceEventRequest {
    string producerId = 1;
    string event = 2;
    string data = 3;
    reserved 4;
}

message ProduceEventResponse {
    int32 status = 1;
    string error = 2;
}

message ConsumeEventRequest {
    string producerName = 1;
    string event = 2;
}

message ConsumerEventResponse {
    int32 status = 1;
    string error = 2;
    string data = 3;
}
